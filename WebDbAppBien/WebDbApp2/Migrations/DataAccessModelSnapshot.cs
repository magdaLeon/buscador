// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDbApp2.Miscellaneous;

#nullable disable

namespace WebDbApp2.Migrations
{
    [DbContext(typeof(DataAccess))]
    partial class DataAccessModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("Models.Decanato", b =>
                {
                    b.Property<int>("DecanatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("DecanatoId");

                    b.ToTable("Decanato");

                    b.HasData(
                        new
                        {
                            DecanatoId = 1,
                            Descripcion = "Diseño, Ciencia y Tecnología"
                        },
                        new
                        {
                            DecanatoId = 2,
                            Descripcion = "CIENCIAS SOCIALES ECONÓMICA Y ADMINISTRATIVAS"
                        },
                        new
                        {
                            DecanatoId = 3,
                            Descripcion = "CIENCIAS DE LA SALUD"
                        },
                        new
                        {
                            DecanatoId = 4,
                            Descripcion = "POSGRADO"
                        },
                        new
                        {
                            DecanatoId = 5,
                            Descripcion = "EDUCACIÓN CONTINUA"
                        },
                        new
                        {
                            DecanatoId = 6,
                            Descripcion = "EDUCACIÓN MEDIA SUPERIOR"
                        },
                        new
                        {
                            DecanatoId = 7,
                            Descripcion = "EDUCACIÓN BÁSICA"
                        },
                        new
                        {
                            DecanatoId = 8,
                            Descripcion = "PROGRAMAS EN LINEA"
                        });
                });

            modelBuilder.Entity("Models.Departamento", b =>
                {
                    b.Property<int>("DeptoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DecanatoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("DeptoId");

                    b.HasIndex("DecanatoId");

                    b.ToTable("Departamento");

                    b.HasData(
                        new
                        {
                            DeptoId = 1,
                            DecanatoId = 1,
                            Descripcion = "ARTE Y DISEÑO"
                        },
                        new
                        {
                            DeptoId = 2,
                            DecanatoId = 1,
                            Descripcion = "BIOTECNOLOGICAS Y AMBIENTALES"
                        },
                        new
                        {
                            DeptoId = 3,
                            DecanatoId = 1,
                            Descripcion = "Computación e Industrial"
                        },
                        new
                        {
                            DeptoId = 4,
                            DecanatoId = 1,
                            Descripcion = "DISEÑO Y CONSTRUCCION"
                        },
                        new
                        {
                            DeptoId = 5,
                            DecanatoId = 1,
                            Descripcion = "ELECTROMECANICA"
                        },
                        new
                        {
                            DeptoId = 6,
                            DecanatoId = 1,
                            Descripcion = "INNOVACIÓN SOSTENIBLE"
                        });
                });

            modelBuilder.Entity("Models.Materia", b =>
                {
                    b.Property<int>("MateriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoClase")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creditos")
                        .HasColumnType("TEXT");

                    b.Property<string>("CursosAsu")
                        .HasColumnType("TEXT");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaActualizacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaIni")
                        .HasColumnType("TEXT");

                    b.Property<string>("NivelAsu")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjetivoAprend")
                        .HasColumnType("TEXT");

                    b.Property<string>("Periodo")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlCurso")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlDownload")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("MateriaId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Materia");

                    b.HasData(
                        new
                        {
                            MateriaId = 1,
                            CodigoClase = "7032",
                            DepartamentoId = 1,
                            Descripcion = "Creatividad para el diseño - 7032, SM: 2022, Jul – Dic",
                            Periodo = "2222",
                            UrlCurso = "https://uag.instructure.com/courses/5021",
                            UrlDownload = "https://uag.instructure.com/courses/5021/content_exports"
                        },
                        new
                        {
                            MateriaId = 2,
                            CodigoClase = "840",
                            DepartamentoId = 2,
                            Descripcion = "Taller de Eval de Form Term - 840, CT: 2021, May – Ago",
                            Periodo = "2132",
                            UrlCurso = "https://uag.instructure.com/courses/21786",
                            UrlDownload = "https://uag.instructure.com/courses/21786/content_exports"
                        },
                        new
                        {
                            MateriaId = 3,
                            CodigoClase = "4406",
                            DepartamentoId = 3,
                            Descripcion = "Creatividad para el diseño - 7032, SM: 2022, Jul – Dic",
                            Periodo = "2221",
                            UrlCurso = "https://uag.instructure.com/courses/2115",
                            UrlDownload = "https://uag.instructure.com/courses/2115/content_exports"
                        });
                });

            modelBuilder.Entity("Models.Departamento", b =>
                {
                    b.HasOne("Models.Decanato", "Decanato")
                        .WithMany("Departamentos")
                        .HasForeignKey("DecanatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Decanato");
                });

            modelBuilder.Entity("Models.Materia", b =>
                {
                    b.HasOne("Models.Departamento", "Depto")
                        .WithMany("Materias")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Depto");
                });

            modelBuilder.Entity("Models.Decanato", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Models.Departamento", b =>
                {
                    b.Navigation("Materias");
                });
#pragma warning restore 612, 618
        }
    }
}
